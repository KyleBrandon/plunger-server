name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Test workflow
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./...

      - name: Store test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: go-test-results
          path: ./test-results

  # Build workflow
  build-and-run:
    # self hosted runner to build on a RPI
    runs-on: self-hosted

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Build Go Webserver
        run: |
          go build -o ./plunger-server

      - name: Move Binary to System Location
        run: |
          sudo mv ./plunger-server /usr/local/bin/plunger-server
          sudo chmod +x /usr/local/bin/plunger-server

      - name: Move Config file to /etc/plunger-server
        run: |
          sudo mkdir -p /etc/plunger-server
          sudo cp config_template.json /etc/plunger-server/config.json
          sudo chown brander:brander /etc/plunger-server/config.json
          sudo chmod 664 /etc/plunger-server/config.json

      - name: Ensure Log File Exists and Set Permissions
        run: |
          sudo touch /var/log/plunger-server.log
          sudo chown brander:brander /var/log/plunger-server.log
          sudo chmod 664 /var/log/plunger-server.log

      # Create or Update Systemd Service
      - name: Create or Update Systemd Service
        run: |
          echo "[Unit]
          Description=Plunger Server
          After=network.target

          [Service]
          ExecStart=/usr/local/bin/plunger-server 
          Environment=DATABASE_URL=${{ secrets.DATABASE_URL }}
          Environment=PORT=${{ secrets.PORT }}
          Environment=LOG_FILE_LOCATION=/var/log/plunger-server.log
          Environment=CONFIG_FILE_LOCATION=/etc/plunger-server/config.json
          Restart=always
          User=brander
          WorkingDirectory=/usr/local/bin
          StandardOutput=append:/var/log/plunger-server.log
          StandardError=append:/var/log/plunger-server.log

          [Install]
          WantedBy=multi-user.target" | sudo tee /etc/systemd/system/plunger-server.service

      # Restart the service
      - name: Restart Plunger Server Service
        run: |
          sudo systemctl daemon-reload
          sudo systemctl enable plunger-server
          sudo systemctl restart plunger-server

      # Check service status
      - name: Check Service Status
        run: |
          sudo systemctl status plunger-server
