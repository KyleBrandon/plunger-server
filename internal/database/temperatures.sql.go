// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: temperatures.sql

package database

import (
	"context"
	"database/sql"
)

const findMostRecentTemperatures = `-- name: FindMostRecentTemperatures :one
SELECT id, created_at, updated_at, water_temp, room_temp FROM temperatures
ORDER BY created_at DESC
LIMIT 1
`

func (q *Queries) FindMostRecentTemperatures(ctx context.Context) (Temperature, error) {
	row := q.db.QueryRowContext(ctx, findMostRecentTemperatures)
	var i Temperature
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.WaterTemp,
		&i.RoomTemp,
	)
	return i, err
}

const saveTemperature = `-- name: SaveTemperature :one
INSERT INTO temperatures (
    water_temp, room_temp) 
VALUES ( $1, $2) 
RETURNING id, created_at, updated_at, water_temp, room_temp
`

type SaveTemperatureParams struct {
	WaterTemp sql.NullString
	RoomTemp  sql.NullString
}

func (q *Queries) SaveTemperature(ctx context.Context, arg SaveTemperatureParams) (Temperature, error) {
	row := q.db.QueryRowContext(ctx, saveTemperature, arg.WaterTemp, arg.RoomTemp)
	var i Temperature
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.WaterTemp,
		&i.RoomTemp,
	)
	return i, err
}
